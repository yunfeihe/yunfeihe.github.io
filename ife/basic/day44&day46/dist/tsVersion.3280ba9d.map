{"version":3,"sources":["tsVersion.ts"],"names":[],"mappings":"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","file":"tsVersion.3280ba9d.map","sourceRoot":"..","sourcesContent":["\r\n\r\n\r\nclass Cook {\r\n    name: string;\r\n    payment: number;\r\n    order: {name: string, price: number};\r\n    private static instance: Cook = null;\r\n    private constructor(name, payment) {\r\n        this.name = name;\r\n        this.payment = payment;\r\n    }\r\n\r\n    static getInstance(name: string, payment:number) {\r\n        if(!Cook.instance) {\r\n            Cook.instance = new Cook(name, payment);\r\n        } \r\n        return Cook.instance;\r\n    }\r\n\r\n    startCook(order: {name: string, price: number}, waiter: Waiter) {\r\n        console.log(this.name + '已经开始做' + order.name + '了');\r\n        console.log('------waiting------');\r\n        console.log('菜已经做好了，通知' + waiter.name + '去上菜');\r\n        this.order = order;\r\n        this.notifyWaiterToServe(waiter);\r\n    }\r\n\r\n    notifyWaiterToServe(waiter: Waiter) {\r\n        waiter.startToServeDishes(this.order);\r\n\r\n    }\r\n}\r\n\r\nclass Waiter {\r\n    name: string;\r\n    payment: number;\r\n    orderBy: Customer;\r\n    order: {name: string, price: number};\r\n    private static instance: Waiter;\r\n    private constructor(name, payment) {\r\n        this.name = name;\r\n        this.payment = payment;\r\n    }\r\n\r\n    static getInstance(name: string, payment:number) {\r\n        if(!Waiter.instance) {\r\n            Waiter.instance = new Waiter(name, payment);\r\n        }\r\n        return Waiter.instance;\r\n    }\r\n\r\n    takeOrderBy(order: {name: string, price: number}, who: Customer) {\r\n        this.orderBy = who;\r\n        this.order = order;\r\n    }\r\n\r\n    notifyCookToCook(cook: Cook) {\r\n        cook.startCook(this.order, this);\r\n    }\r\n\r\n    startToServeDishes(order: {name: string, price: number}) {\r\n        console.log(\"给\" + this.orderBy.name + '上' + order.name);\r\n        this.orderBy.notifyOk();\r\n    }\r\n\r\n}\r\n\r\nclass Seat {\r\n    private __customer: Customer;\r\n    private static instance: Seat;\r\n    private constructor(customer: Customer) {\r\n        this.__customer = customer;\r\n    }\r\n\r\n    static getInstance(customer: Customer = null) {\r\n        if(!Seat.instance) {\r\n            Seat.instance = new Seat(customer);\r\n        } \r\n        return Seat.instance;\r\n\r\n    }\r\n\r\n    getCustomer(): Customer {\r\n        return this.__customer;\r\n    }\r\n\r\n    setCustomer(customer: Customer) {\r\n        if(this.__customer !== null && customer !== null) {\r\n            console.log(\"已经有人了\");\r\n        } else {\r\n            this.__customer = customer;\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\nclass Customer {\r\n    name: string;\r\n    seat: Seat = null;\r\n    private static instance: Customer = null;\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n\r\n\r\n    takeSeat(seat: Seat) {\r\n        this.seat = seat;\r\n        seat.setCustomer(this);\r\n    }\r\n\r\n    toString() {\r\n        return this.name;\r\n    }\r\n\r\n    outSeat() {\r\n        if(this.seat === null) {\r\n            console.log(\"你还没有入座\");\r\n        } else {\r\n            this.seat.setCustomer(null);\r\n        }\r\n    }\r\n\r\n    orderToWaiter(waiter: Waiter, order: {name: string, price: number}) {\r\n        waiter.takeOrderBy(order, this);\r\n    }\r\n\r\n    notifyOk() {\r\n        console.log(this.name + '正在吃饭');\r\n        console.log('吃完了');\r\n        this.outSeat();\r\n    }\r\n}\r\n\r\nclass Menu {\r\n    private static instance: Menu;\r\n    private static dishes = {\r\n        'fish': 100,\r\n        'meat': 100,\r\n        'drink': 10,\r\n        'duck': 100,\r\n    }\r\n    private constructor() {\r\n    }\r\n\r\n    static getInstance() {\r\n        if(!Menu.instance) {\r\n            Menu.instance = new Menu();\r\n        }\r\n        return Menu.instance;\r\n        \r\n    }\r\n\r\n    order(name):{name: string, price: number} {\r\n        if(name in Menu.dishes) {\r\n            return {\r\n                name: name,\r\n                price: Menu.dishes[name],\r\n            }\r\n        } else {\r\n            console.log(\"没有叫\" + name +\"的菜，可以帮你做，但定价一律200\");\r\n            return {\r\n                name: name,\r\n                price: 200,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Queue<T> {\r\n    private stor: T[];\r\n    constructor(...customeres: T[]) {\r\n        this.stor = [].concat(customeres);\r\n    }\r\n\r\n    add(item: T) {\r\n        this.stor.push(item);\r\n    }\r\n\r\n    offer() {\r\n        return this.stor.shift();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.stor.length === 0;\r\n    }\r\n\r\n    toString(): string {\r\n        return '[' + this.stor.join('-') + ']';\r\n    }\r\n}\r\n\r\nfunction main() {\r\n    let cook = Cook.getInstance('海绵宝宝', 0);\r\n    let waiter = Waiter.getInstance('章鱼哥', 1000);\r\n    let customer = new Customer('派大星');\r\n    let customerQueue = new Queue<Customer>();\r\n    let dishName = 'fish';\r\n    console.log(cook, waiter, customer, customerQueue)\r\n    customerQueue.add(customer);\r\n    \r\n\r\n    window.setInterval(function() {\r\n        console.log(\"新的一轮\");\r\n        console.log('当前剩余顾客', customerQueue.toString());\r\n\r\n        if(customerQueue.isEmpty()) {\r\n            console.log('当前没有顾客');\r\n        } else {\r\n            let cus: Customer = customerQueue.offer();\r\n            console.log(\"服务顾客：\", cus.name);\r\n            cus.takeSeat(Seat.getInstance());\r\n            let order = Menu.getInstance().order(dishName);\r\n            cus.orderToWaiter(waiter, order);\r\n            waiter.notifyCookToCook(cook);\r\n        }\r\n    }, 2000);\r\n\r\n\r\n    let nameEl = document.querySelector(\"#name\");\r\n    let dishEl = document.querySelector(\"#dish\");\r\n    document.querySelector(\"#order\").addEventListener('click', function() {\r\n        let name = nameEl.value;\r\n        let dish = dishEl.value;\r\n        let c = new Customer(name);\r\n        dishName = dishEl.value;\r\n        customerQueue.add(c);\r\n        console.log(c.name + '来了');\r\n    });\r\n\r\n    \r\n\r\n}\r\n\r\nmain();\r\n"]}